version: '3.7'

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - orchestrate

x-postgres-common: &postgres-common
  environment:
    POSTGRES_PASSWORD: postgres

services:
  zookeeper:
    <<: *container-common
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - ${ZOOKEEPER_EXTERNAL_PORT-2181}:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT-32181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME-2000}

  kafka:
    <<: *container-common
    image: confluentinc/cp-kafka:5.4.3
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_EXTERNAL_PORT-9092}:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT-32181}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${KAFKA_EXTERNAL_HOSTNAME-localhost}:${KAFKA_EXTERNAL_PORT-9092}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  postgres-api:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-api:/var/lib/postgresql/data
    ports:
      - 5432

  vault:
    <<: *container-common
    image: library/vault:1.6.0
    tty: true
    cap_add:
      - IPC_LOCK
    volumes:
      - ./hashicorp/config/config.hcl:/vault/config.hcl:ro
      - ./hashicorp/plugins/orchestrate-hashicorp-vault-plugin:/vault/plugins/orchestrate
    entrypoint: vault server -config=/vault/config.hcl
    ports:
      - 9999:8200

  vault-init:
    <<: *container-common
    build: ./hashicorp
    environment:
      VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
    restart: "no"
    depends_on:
      - vault
    volumes:
      - vault-token:/vault/token
      - ./hashicorp/init.sh:/init.sh
      - ./hashicorp/plugins/orchestrate-hashicorp-vault-plugin:/vault/plugins/orchestrate
    command: sh /init.sh

  eth-client:
    <<: *container-common
{% if clientType == "gquorum" %}
    image: quorumengineering/quorum:${QUORUM_VERSION:-2.7.0}
    entrypoint:
      - /bin/sh
      - -c
      - |
        geth --datadir "/nodeData" init "/nodeData/genesis.json"
        geth \
        --rpc \
        --rpcaddr "0.0.0.0" \
        --rpcport "${GETH_RPC_PORT-8545}" \
        --rpccorsdomain "*" \
        --rpcvhosts "*" \
        --datadir "/nodeData" \
        --port "${GETH_PORT-30303}" \
        --rpcapi "admin,eth,net,web3,personal,txpool" \
        --networkid ${GETH_NETWORKID-888} \
        --nodiscover \
        --unlock "0" \
        --password "/nodeData/password" \
        --allow-insecure-unlock \
        --mine \
        --debug \
        --ipcdisable \
        --syncmode "full"
    volumes:
      - ./config/gquorum/genesis.json:/nodeData/genesis.json
      - ./config/gquorum/keystore:/nodeData/keystore
      - ./config/gquorum/password:/nodeData/password
      #- chain-data:/nodeData/geth
    healthcheck:
      test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8545"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
{% else %}
    image: hyperledger/besu:latest
    command: "--config-file=/config/config.toml"
    environment:
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    volumes:
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/genesis.json:/config/genesis.json
      - ./config/besu/key:/config/key
      - ./config/besu/log-config.xml:/config/log-config.xml
{% endif %}
    ports:
      - 8545:8545
      - 8546:8546
    networks:
      - orchestrate

volumes:
  db-data-api:
    driver: local
  vault-token:
    driver: local

networks:
  orchestrate:
    driver: bridge
